# Smithery.ai configuration
startCommand:
  type: stdio
  configSchema:
    type: object
    properties:
      ollama_url:
        type: string
        description: URL for the Ollama server
        default: "http://localhost:11434"
      embedding_url:
        type: string
        description: URL for the embedding service
        default: "http://localhost:8000"
      embedding_model:
        type: string
        description: Model to use for generating embeddings
        default: "nomic-embed-text"
        enum: ["nomic-embed-text", "llama2", "mistral"]
      postgres_db:
        type: string
        description: PostgreSQL database name
        default: "parquet_db"
      postgres_user:
        type: string
        description: PostgreSQL username
        default: "postgres"
      postgres_password:
        type: string
        description: PostgreSQL password
        default: "postgres"
      postgres_host:
        type: string
        description: PostgreSQL host
        default: "localhost"
      postgres_port:
        type: string
        description: PostgreSQL port
        default: "5432"
      batch_size:
        type: integer
        description: Batch size for embedding generation
        default: 2
        minimum: 1
        maximum: 100
      log_level:
        type: string
        description: Logging level for the server
        default: "INFO"
        enum: ["DEBUG", "INFO", "WARNING", "ERROR", "CRITICAL"]
    required: ["ollama_url", "embedding_url", "embedding_model"]
  commandFunction:
    |-
    (config) => ({
      "command": "uv",
      "args": [
        "--directory",
        "./src/parquet_mcp_server",
        "run",
        "main.py"
      ],
      "env": {
        "OLLAMA_URL": config.ollama_url,
        "EMBEDDING_URL": config.embedding_url,
        "EMBEDDING_MODEL": config.embedding_model,
        "POSTGRES_DB": config.postgres_db,
        "POSTGRES_USER": config.postgres_user,
        "POSTGRES_PASSWORD": config.postgres_password,
        "POSTGRES_HOST": config.postgres_host,
        "POSTGRES_PORT": config.postgres_port,
        "BATCH_SIZE": config.batch_size.toString(),
        "LOG_LEVEL": config.log_level
      }
    })

build:
  dockerfile: Dockerfile
  dockerBuildPath: . 